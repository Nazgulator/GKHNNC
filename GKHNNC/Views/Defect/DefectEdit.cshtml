@model GKHNNC.Models.DefectEdit



<h2>Редактор дефектов</h2>
@Html.DropDownList("Uslugi", new SelectList(ViewBag.Result, "Value", "Text", ViewBag.Name), new { @class = "form-control col-md-4", @style = "width:100%" })

<h2>  @Model.Element.Name </h2>
<h4> Удалить все содержащее </h4>
<input id="Tex" />
<button id="Del" class="btn btn-success "> Удалить </button>
<div class="container">
    <div class="table">
        <div class="row">
            <div class="col-md-6">
                <h2> Список дефектов:</h2>
                <table class="table table-striped">
                    <tr>
                        <td>
                            <input id="AddText" />
                        </td>
                        <td>
                            <button id="Add" class="btn btn-success "> Добавить дефект </button>
                        </td>
                    </tr>
                    @for (int i = 0; i < Model.Defect.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(Model => Model.Defect[i].Def);
                            </td>
                            <td>
                                @Html.ActionLink("X", "DefectEdit", new { xd = Model.Defect[i].Id, selection = ViewBag.Name })
                            </td>
                        </tr>
                    }

                </table>
            </div>
            <div class="col-md-6">
                <h2> Список работ:</h2>
                <table class="table table-striped">
                    <tr>
                        <td>
                            <input id="AddTextw" />
                        </td>
                        <td>
                            <button id="Addw" class="btn btn-success "> Добавить работу </button>
                        </td>
                    </tr>
                    @for (int i = 0; i < Model.DefWork.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(Model => Model.DefWork[i].Work)
                            </td>
                            <td>
                                @Html.ActionLink("X", "DefectEdit", new { xw = Model.DefWork[i].Id, selection = ViewBag.Name })
                            </td>
                        </tr>
                    }
                </table>
            </div>

        </div>
    </div>
</div>
<p><a href="/Home/Index" class="btn btn-success btn-block">В главное меню &raquo;</a> </p>

<!-- Modal -->
<div class="modal fade" id="Download" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">



                <button id="X" type="button" class="close hide" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4>Загрузка данных, пожалуйста подождите...</h4>

            </div>
            <div class="modal-body">
                <div class="progress">

                    <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-success progress-bar-animated" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                    <center>
                        <label id="nadpis">Загрузка данных...</label>
                    </center>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/scripts/jquery-3.3.1.js")
    @Scripts.Render("~/Scripts/chosen.jquery.min.js")
    @Scripts.Render("~/scripts/nprogress.min.js")
    @Scripts.Render("~/scripts/jquery.signalR-2.4.0.min.js")
    @Scripts.Render("~/signalr/hubs")


    <script>

        $("#Uslugi").change(function () {
            var S = $("#Uslugi").val();
            window.location.replace("/Defect/DefectEdit?selection=" + S);



        });


    </script>
    <script>

        $("#Del").click(function () {
            var S = $("#Uslugi").val();
            var SS = $("#Tex").val();
            window.location.replace("/Defect/DefectEdit?selection=" + S + "&del=" + SS);



        });


    </script>
    <script>

        $("#Add").click(function () {
            var S = $("#Uslugi").val();
            var SS = $("#AddText").val();
            window.location.replace("/Defect/DefectEdit?selection=" + S + "&addd=" + SS);



        });


    </script>
    <script>

        $("#Addw").click(function () {
            var S = $("#Uslugi").val();
            var SS = $("#AddTextw").val();
            window.location.replace("/Defect/DefectEdit?selection=" + S + "&addw=" + SS);



        });


    </script>


    <script>
        $(function () {
            var PB = $.connection.progressHub;
            console.log("Loading...");
            PB.client.sendMessage = function (message, count) {
                // update progress
                console.log(count);
                UpdateProgress(message, count);
                //alert(message);
            };

            $.connection.hub.start().done(function () {
                console.log("Приконнектились");
                // call the method CallLongOperation defined in the Hub
                PB.server.getCountAndMessage();
                //$("#progressBar").hide();



            });


            // Update the progress bar
            function UpdateProgress(message, count) {
                // $("#progressBar").fadeIn("slow");
                var result = $("#result");
                if (count >= 100) { $("#X").click(); }
                result.html(message);

                //$("#progressBar").data("progressbar").value(count);

                $("#progressBar").attr("aria-valuenow", count);
                $("#progressBar").width(count + '%');
                $("#progressBar").text(count + '%');
                $("#nadpis").text(message);
                // $("#progressBar").css("width", count);
            }
        });
    </script>


}