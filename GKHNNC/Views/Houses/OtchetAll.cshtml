@model IEnumerable<GKHNNC.Models.OtchetNeobhodimieRaboti>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout0.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Отчет по всем домам</title>
</head>
<body>
    <h2>Отчет по всем домам</h2>

    <p><a href="/Home/Index" class="btn btn-success btn-block"><< В главное меню </a> </p>

    <table id="tableData" class="table table-bordered table-striped">
        <tr>
            <th></th>
            <th></th>
            <th colspan="2">Бордюры</th>
            <th colspan="2">Контейнерная площадка</th>
            <th colspan="2">Малые формы</th>
            <th colspan="2">Ограждения</th>
            <th colspan="10"></th>


        </tr>
        <tr>
            <th>
                ЭУ
            </th>

            <th>
                Адрес
            </th>
            <th>
                Покраска м2
            </th>
            <th>
                Мелкий ремонт м2
            </th>
            <th>
                Покраска м2
            </th>
            <th>
                Мелкий ремонт м2
            </th>
            <th>
                Покраска м2
            </th>
            <th>
                Мелкий ремонт м2
            </th>
            <th>
                Покраска м2
            </th>
            <th>
                Мелкий ремонт м2
            </th>
            <th>
                Таблички шт
            </th>
            <th>
                Доска объявлений шт
            </th>
            <th>
                Стенды шт
            </th>
            <th>
                Песок тонн
            </th>
            <th>
                Грунт тонн
            </th>
            <th>
                Щебень тонн
            </th>
            <th>
                Отсев тонн
            </th>
            <th>
                Вывоз снега м3
            </th>
            <th>
                Сброс снега м2
            </th>
            <th>
                Мех. уборка машиночас.
            </th>





        </tr>
        @{bool Y = false; }
        @foreach (var item in Model)
        {
            string Bordurs = "0";
            string Bordurs2 = "0";

            string Ploshadkas = "0";
            string Ploshadkas2 = "0";
            string Malie = "0";
            string Malie2= "0";
            string Tablichki = "0";
            string Doska = "0";
            string Stendi = "0";
            string Pesok = "0";
            string Grunt = "0";
            string Sheben = "0";
            string Otsev = "0";
            string Sneg = "0";
            string Mehuborka = "0";
            string SbrosSnega = "0";

            try { Tablichki = item.AOW.Where(x => x.OsmotrWorkId == 162).First().Number.ToString().Replace('.',','); }
            catch { }
            try { Stendi = item.AOW.Where(x => x.OsmotrWorkId == 163).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Pesok = item.AOW.Where(x => x.OsmotrWorkId == 154).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Grunt = item.AOW.Where(x => x.OsmotrWorkId == 155).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Sheben = item.AOW.Where(x => x.OsmotrWorkId == 156).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Otsev = item.AOW.Where(x => x.OsmotrWorkId == 157).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Tablichki = item.AOW.Where(x => x.OsmotrWorkId == 162).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Doska = item.AOW.Where(x => x.OsmotrWorkId == 166).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Sneg = item.AOW.Where(x => x.OsmotrWorkId == 158).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { Mehuborka = item.AOW.Where(x => x.OsmotrWorkId == 159).First().Number.ToString().Replace('.', ','); }
            catch { }
            try { SbrosSnega = item.AOW.Where(x => x.OsmotrWorkId == 165).First().Number.ToString().Replace('.', ','); }
            catch { }
            try
            { Ploshadkas = item.AOW.Where(x => x.OsmotrWorkId == 160).First().Number.ToString().Replace('.', ','); }
            catch { }
            try
            { Ploshadkas2 = Math.Round(item.AOW.Where(x => x.OsmotrWorkId == 160).First().Number * 0.05m, 2).ToString().Replace('.', ','); }
            catch { }
            try
            { Malie = item.AOW.Where(x => x.OsmotrWorkId == 161).First().Number.ToString().Replace('.', ','); }
            catch
            {

            }
            try
            { Malie2 = Math.Round(item.AOW.Where(x => x.OsmotrWorkId == 161).First().Number * 0.05m, 2).ToString().Replace('.', ','); }
            catch
            {

            }
            string Ogragdenia = "0";
            string Ogragdenia2 = "0";
            try
            { Ogragdenia = item.AE.Where(x => x.ElementId == 1218).First().Kolichestvo.ToString().Replace('.', ','); }
            catch
            {

            }
            try
            { Ogragdenia2 = Math.Round(item.AE.Where(x => x.ElementId == 1218).First().Kolichestvo * 0.05m, 2).ToString().Replace('.', ','); }
            catch
            {

            }
            try
            {
                Bordurs = Math.Round(item.AE.Where(x => x.ElementId == 1217).First().Kolichestvo * 0.05m, 2).ToString().Replace('.', ',');
            }
            catch { }
            try
            {
                Bordurs2 = item.AE.Where(x => x.ElementId == 1217).First().Kolichestvo.ToString().Replace('.', ',');
            }
            catch { }

            string Cl1 = "table-warning";
            string Cl2 = "table-warning";
            string Cl3 = "table-warning";
            string Cl4 = "table-warning";
            string P = "table-warning";
            string O = "table-warning";
            string G = "table-warning";
            string S = "table-warning";
            string Sn = "table-warning";
            string M = "table-warning";
            if (Bordurs.Equals("0") == false) { Cl1 = ""; }
            if (Ploshadkas.Equals("0")==false) { Cl2 = ""; }
            if (Malie.Equals("0") == false) { Cl3 = ""; }
            if (Ogragdenia.Equals("0") == false) { Cl4 = ""; }
            if (Pesok.Equals("0") == false) { P = ""; }
            if (Otsev.Equals("0") == false) { O = ""; }
            if (Grunt.Equals("0") == false) { G = ""; }
            if (Sheben.Equals("0") == false) { S = ""; }
            if (Sneg.Equals("0") == false) { Sn = ""; }
            if (Mehuborka.Equals("0") == false) { M = ""; }

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Adres.EUId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Adres.Adress)
                </td>
                <td class="@Cl1">

                    @Bordurs
                </td>
                <td class="@Cl1">

                   @Bordurs2
                </td>

                <td class="@Cl2">
                    @Ploshadkas
                </td>
                <td class="@Cl2">
                   @Ploshadkas2
                </td>
                <td class="@Cl3">
                    @Malie
                </td>
                <td class="@Cl3">
                    @Malie2
                </td>
                <td class="@Cl4">
                    @Ogragdenia
                </td>
                <td class="@Cl4">
                    @Ogragdenia2
                </td>
                <td>
                    @Tablichki
                </td>
                <td>
                    @Doska
                </td>
                <td>
                    @Stendi
                </td>
                <td class="@P">
                    @Pesok
                </td>
                <td class="@G">
                    @Grunt
                </td>
                <td class="@S">
                    @Sheben
                </td>
                <td class="@O">
                    @Otsev
                </td>
                <td>
                    @Sneg
                </td>
                <td>
                    @SbrosSnega
                </td>
                <td>
                    @Mehuborka
                </td>
            </tr>
        }

    </table>


    <br />
    <p><button class="btn btn-block btn-success" onclick="Export()"> Экспорт в Эксель </button></p>
    <p><a href="/Home/Index" class="btn btn-success btn-block"><< В главное меню </a> </p>
    <!-- Modal -->
    <div class="modal fade" id="Download" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Загрузка данных, пожалуйста подождите...</h4>
                    <button id="X" type="button" class="close hide" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="progress">

                        <div id="progressBar" class="progress-bar progress-bar-striped bg-success progress-bar-animated" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        <center>
                            <label id="nadpis">Загрузка данных...</label>
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

</html>
@section Scripts
    {

    @Scripts.Render("~/scripts/bootstrap.bundle.js")
    @Scripts.Render("https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js")

    @Scripts.Render("~/scripts/jquery-3.4.1.js")
    @Scripts.Render("~/scripts/jquery-ui-1.12.1.js")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/scripts/bootstrap.js")
    @Scripts.Render("~/scripts/bootstrap.bundle.js")
    @Scripts.Render("/scripts/ExportToExcel/excelexportjs.js")
    <link rel="stylesheet" href="~/Scripts/JqueryThemes/ui-lightness/jquery-ui.css" />
    <script>
        function Closeall ()
        {
            var GO = confirm('Вы уверены, что хотите закрыть все текущие осмотры? ')
            if (GO) {
                var GO2 = confirm('Осмотры будут переданы в отдел ОЭЖФ и недоступны для редактирования ЭУ. Закрытие осмотров должно быть санкционировано администрацией. Закрыть все текущие осмотры? ')
                if (GO2)
                {
                      $.post('@Url.Action("CloseAll", "Houses")',
                    function (data) {


                        window.location.replace('/Houses/Index?obnovit=true');
                          }
                      );

                }


            }
        }
    </script>
    <script>
        function OtchetAll ()
        {

                      $.post('@Url.Action("OtchetAll", "Houses")',
                    function (data) {


                        window.location.replace('/Houses/Index?obnovit=true');
                          }
                      );





        }
    </script>
    <script>
 $("#Search").autocomplete({
        source: '@Url.Action("SearchAdres", "Houses")',
        minLength: 1,
        select: function (event, ui)
        {

            var _this = ui.item.label;
            var from = $('#fromD').val().split('-');

            var f = from[0] + "/" + from[1] + "/" + from[2];

            var to = $('#toD').val().split('-');
            var t = to[0] + "/" + to[1] + "/" + to[2];
            var WP = $('#WorkPoisk').val();
            window.location.replace('/Houses/Index?Adres=' + _this + '&fromD=' + f+'&toD='+t+'&WorkPoisk='+WP);


        },

        open: function (event, ui) {
        $(this).removeClass('ui-autocomplete-loading');

        }
    });


         function GoHome () {

             var _this = $('#Search').val();
            var from = $('#fromD').val().split('-');

            var f = from[0] + "/" + from[1] + "/" + from[2];

            var to = $('#toD').val().split('-');
            var t = to[0] + "/" + to[1] + "/" + to[2];
            var WP = $('#WorkPoisk').val();
            window.location.replace('/Houses/Index?Adres=' + _this + '&fromD=' + f + '&toD=' + t + '&WorkPoisk=' + WP);


        }

    $('#Search').on('keypress', function () {
        var that = this;

        setTimeout(function () {
            var res = /[^а-я,0-9,А-Я ]/g.exec(that.value);
            console.log(res);
            that.value = that.value.replace(res, '');
        }, 0);
        });
        $('#Search').click(function () {
            var that = this;
            that.value = "";
        });
    </script>

    <script>


        $('#WorkPoisk').on('keypress', function () {
            var that = this;

            setTimeout(function () {
                var res = /[^а-я,0-9,А-Я ]/g.exec(that.value);
                console.log(res);
                that.value = that.value.replace(res, '');
            }, 0);
        });
        $('#WorkPoisk').click(function () {
            var that = this;
            that.value = "";
        });
    </script>

    <script>
        function NewOsmotr(id, date) {
            alert(id + ';' + date);
            var GO = confirm('Вы уверены, что хотите создать новый осмотр? ')
            if (GO) {

                /**/
                window.location.replace('/Osmotrs/Create?id=' + id + '&date=' + date + '&NewOsmotr=true');
                /**/

            }
        }
    </script>
    <script>
        function OpenModal(id) {
            $('#' + id).modal('show');
        }
    </script>

    <script>
        function Export() {

            $("#tableData").excelexportjs({
                containerid: "tableData",
                datatype: 'table'
            });

        };
    </script>
}